}
fixed_impuestos <- fixed_impuestos %>%
#rename(impuesto_loc = importe) %>%
select(-ends_with("_2")) %>%
mutate(nombre_archivo = name_file,
id = id)
}
fixed_conceptos <- fixed_conceptos %>%
select(-ends_with("_2")) %>%
select(-ends_with("names")) %>%
mutate(nombre_archivo = name_file,
id = id) %>%
distinct()
if(nrow(fixed_impuestos) >0){
toadd <- fixed_conceptos%>% left_join(fixed_impuestos)
} else {
toadd <- fixed_conceptos
}
fixed <- fixed %>% bind_rows(toadd)
}
tt3 <- fixed %>%
group_by(id, rfc,	nombre,nombre_archivo,fecha=	date,#clave_unidad,unidad,#tipo_impuesto
receptor_rfc, receptor_nombre,
) %>%
summarise(across(starts_with(c("importe","impuesto","impuesto_loc")),~sum(as.numeric(.),na.rm = T)),
across(starts_with(c("descuento", "ret")),~-sum(as.numeric(.),na.rm = T))) %>%
rowwise() %>%
mutate(total = sum(c_across(starts_with(c("importe","impuesto","impuesto_loc", "descuento", "ret")))))
dat_towrite <- tt3%>%
ungroup() %>% tibble() %>%
arrange(desc(fecha)) %>%
distinct(id,.keep_all = T) %>%
arrange(fecha) %>%
filter(fecha > as.Date("01/10/2023",format="%d/%m/%Y")) %>%
rowid_to_column("num") %>%
mutate(across(starts_with(c("importe","impuesto","impuesto_loc", "descuento", "ret", "total")),
~ifelse(stri_detect(nombre_archivo, fixed = "ingresos"),-., .)))
dat_towrite <- dat_towrite %>% add_column_if_empty("impuesto_loc")
dat_towrite <- dat_towrite %>% add_column_if_empty("ret_iva")
dat_towrite <- dat_towrite %>% add_column_if_empty("ret_isr")
dat_towrite <- dat_towrite %>% add_column_if_empty("descuento")
dat_towrite <- dat_towrite %>%
mutate(num = num+ 1,
id2 = "X",CAT = "X",#fecha =  as_datetime(fecha),
nombre_archivo = stri_replace_all(nombre_archivo, fixed ="//", "/"),
nombre_archivo = stri_replace_first(nombre_archivo, fixed =stri_replace_first(carpeta, fixed ="~/", "/Users/lzoleon/"), ""),
Semestre = sprintf("CEILING.MATH(((MOD(YEAR(I%s),2023)*12+MONTH(I%s))-10)/6,1)",num,num),
mes = sprintf('CONCAT(YEAR(I%s)," ",MONTH(I%s))',num,num),
total = sprintf('SUM(L%s:Q%s)-Q%s-P%s',num,num,num,num),
deposito = sprintf('SUM(L%s:Q%s)',num,num),
CAT = case_when(
rfc %in% c("CCA13050946A" , "BII931004P61",
"TAPR801211ET9" ,"TPT890516JP5",
"TBO140305DH0" , "ILA101109LT1" ) ~ "1. CEGAM",
rfc =="UATC921227SFA" ~"2. Carolina Uscanga Tejeda",
rfc %in% c("MELV830330LL4" ,"RAEE9611079Q5")~ "4. CICESE (Asesoría tec)",
rfc =="RUBJ880825HT3" ~"4. Juan Cristóbal Rubio Badán",
rfc =="PERL760423341" ~"4. Lorena Pedrín (divulgacion)",
rfc =="GOLL601107RM5" ~"4. Lourdes González",
rfc =="UAE5702287S5" ~"4. UABC",
rfc =="SCA8111193G7" ~"5. CICESE (Combustible)",
rfc %in% c("DLO140827DS0","EARO760528CZ4","OPG230125DI6","CJV1206082B1",
"GOIH7402157I2","HIRE930126P54" ,"MABB6711202D1" ,"TTN08072242A",
"EILN791022CE6","TBA0806233M6","EIZV790827JF8","CME100225KI1",
"OTR8806018L6" ,"EAPM870722RB9","ZAGG500227FE8" ,"TOZP820629G41",
"SRS120620PJ3","CAGP910630J39","DCA150518QV3")~"5. CICESE (Viaticos)",
rfc =="IEN610217S28" ~"6. CEVIT",
rfc =="TCC230601967" ~"6. CLACLA (Construcción)",
rfc =="IAS160208CF1" ~"6. Oscar Jiménez (Construcción)",
rfc %in% c("FAV210203NC9","TTE2007072Q4","PER760130PV6")~"6. CICESE (Maquinaria y equipo)",
)
)
class(dat_towrite$Semestre) <- c(class(dat_towrite$Semestre), "formula")
class(dat_towrite$mes) <- c(class(dat_towrite$mes), "formula")
class(dat_towrite$total) <- c(class(dat_towrite$total), "formula")
class(dat_towrite$deposito) <- c(class(dat_towrite$deposito), "formula")
dat_towrite <- dat_towrite %>%
select(CFDI = id, rfc, Semestre, mes, id = id2, CAT, nombre, nombre_archivo, fecha,
receptor_rfc, receptor_nombre, importe,starts_with("impuesto"),starts_with("descuento"),
starts_with("ret_iva") , starts_with("ret_isr")  , total, deposito)
library(openxlsx)
wb <- createWorkbook()
addWorksheet(wb, "Facturas")
writeDataTable(wb, "Facturas", x = dat_towrite)
headerStyle <- createStyle(
fontSize = 14, fontColour = "#FFFFFF", halign = "center",
fgFill = "#4F81BD", border = "TopBottom", borderColour = "#4F81BD"
)
numStyle <- createStyle(numFmt = "ACCOUNTING")
addStyle(wb, sheet = 1, numStyle, rows = 2:(nrow(dat_towrite)+1), cols = 12:19, gridExpand = TRUE)
datStyle <- createStyle(numFmt = "DATE")
addStyle(wb, sheet = 1, datStyle, rows = 2:(nrow(dat_towrite)+1), cols = 9, gridExpand = TRUE)
if(reembolso){
saveWorkbook(wb, paste0(carpeta,"/calculo_reembolso.xlsx"), overwrite = TRUE)
} else {
saveWorkbook(wb, paste0(carpeta2,"/full_facturas_2023_2024.xlsx"), overwrite = TRUE)
}
carpeta <- "~/Library/CloudStorage/GoogleDrive-lorenzoln@gmail.com/My Drive/Work/CONTABILIDAD/ESPECIALISTAS/2024/pagos/07_julio/Reembolso_Cuauhtemoc/"
carpeta2 <- "~/Desktop/"
files <- list.files(carpeta,
full.names = T,pattern = ".xml",ignore.case = T, recursive = T)
library(xml2)
fixed <- tibble()
#files <- files[-20]
for (i in 1:length(files)) {
print("Doing for: " %+%i)
tt <- as_list(read_xml(files[i],options = "NOBLANKS"))
main <- tt$Comprobante$Emisor %>% attributes()
recp <- tt$Comprobante$Receptor %>% attributes()
id <- tt$Comprobante$Complemento$TimbreFiscalDigital %>% attributes()
id <- id$UUID
names(recp) <- "receptor_"%+%names(recp)
#tt$Comprobante[[2]] %>% attributes()
datetimbrdo <- tt$Comprobante$Complemento
for (k in 1:length(datetimbrdo)) {
if(!is.null(datetimbrdo[[k]] %>%
attr("FechaTimbrado") )) {
#print("breaking at: "%+%k)
break
}
}
datetimbrdo <- datetimbrdo[[k]] %>%
attr("FechaTimbrado") %>%
as_datetime(format= "%Y-%m-%dT%T")
#monts <- tt$Comprobante$Impuestos$Traslados
monts <- tt$Comprobante$Conceptos
fixed_conceptos <- tibble()
#name_file <- stri_extract_last_regex(files[i], "([[:alnum:]_ ,-]+).xml")
name_file <- files[i]
for (j in 1:length(monts)) {
#info_pago <- tt$Comprobante$Impuestos$Traslados[[j]] %>% attributes()
info_pago <- monts[[j]] %>% attributes()
#if(is.null)
concepto <- monts[[j]] %>%  attributes()
if(all(names(info_pago)%in%names(concepto))){
info_pago <- c()
} else if(sum(names(info_pago)%in%names(concepto))<length(names(info_pago))&
sum(names(info_pago)%in%names(concepto))>0){
info_pago <- info_pago[-which(names(info_pago)%in%names(concepto))]
}
if(monts[[j]]$Impuestos$Traslados$Traslado %>%
attributes() %>% length()>0){
pago_impuestos <- monts[[j]]$Impuestos$Traslados$Traslado %>%
attributes()%>%
as_tibble()
if("Importe"%in%names(pago_impuestos)){
pago_impuestos <-pago_impuestos%>%
rename(tipo_impuesto = Impuesto,Impuesto = Importe, Importe = Base)
} else {
pago_impuestos <-pago_impuestos%>%
rename(tipo_impuesto = Impuesto,#Impuesto = Importe,
Importe = Base)
}
if(all(names(pago_impuestos)%in%names(concepto))){
info_pago <- c()
} else if(sum(names(pago_impuestos)%in%names(concepto))<length(names(pago_impuestos))&
sum(names(pago_impuestos)%in%names(concepto))>0){
pago_impuestos <- pago_impuestos[-which(names(pago_impuestos)%in%names(concepto))]
}
} else {
pago_impuestos <- c()
}
if("Retenciones"%in%(monts[[j]]$Impuestos %>%names)){
retenciones <- tibble()
for (k in 1:length(monts[[j]]$Impuestos$Retenciones)) {
retencion <- monts[[j]]$Impuestos$Retenciones[[k]] %>%
attributes() %>%
as_tibble() %>%
mutate(tipo = case_when(
Impuesto =="002" ~ "retIVA",
Impuesto =="001" ~ "retISR",
)) %>%
select(Base, tipo, monto = Importe)
retenciones <- retenciones %>%
bind_rows(retencion)
}
retenciones <- retenciones%>%
mutate(across(-tipo,~as.numeric(.))) %>%
pivot_wider(names_from = tipo, values_from = monto) %>%
select(-Base)
all_concepto <- c(main,list(date = datetimbrdo),recp,concepto,info_pago,pago_impuestos,retenciones) %>%
as_tibble() %>% clean_names()
} else {
all_concepto <- c(main,list(date = datetimbrdo),recp, concepto,info_pago,pago_impuestos) %>%
as_tibble() %>% clean_names()
}
fixed_conceptos <- fixed_conceptos %>% bind_rows(all_concepto)
}
monts <- tt$Comprobante$Complemento$ImpuestosLocales
fixed_impuestos <- tibble()
if(!is.null(monts)){
if(length(monts)<=0){
impuestos <- monts %>%  attributes()
all_impuestos <- c(main, list(date = datetimbrdo),impuestos)%>%
as_tibble()  %>% clean_names()
fixed_impuestos <- fixed_impuestos %>% bind_rows(all_impuestos)
} else {
for (j in 1:length(monts)) {
impuestos <- monts[[j]] %>%  attributes()
all_impuestos <- c(main, list(date = datetimbrdo),impuestos)%>%
as_tibble()  %>% clean_names()
fixed_impuestos <- fixed_impuestos %>% bind_rows(all_impuestos)
}
}
if("importe"%in%names(fixed_impuestos)){
fixed_impuestos <- fixed_impuestos %>%
rename(impuesto_loc = importe)
}
fixed_impuestos <- fixed_impuestos %>%
#rename(impuesto_loc = importe) %>%
select(-ends_with("_2")) %>%
mutate(nombre_archivo = name_file,
id = id)
}
fixed_conceptos <- fixed_conceptos %>%
select(-ends_with("_2")) %>%
select(-ends_with("names")) %>%
mutate(nombre_archivo = name_file,
id = id) %>%
distinct()
if(nrow(fixed_impuestos) >0){
toadd <- fixed_conceptos%>% left_join(fixed_impuestos)
} else {
toadd <- fixed_conceptos
}
fixed <- fixed %>% bind_rows(toadd)
}
tt3 <- fixed %>%
group_by(id, rfc,	nombre,nombre_archivo,fecha=	date,#clave_unidad,unidad,#tipo_impuesto
receptor_rfc, receptor_nombre,
) %>%
summarise(across(starts_with(c("importe","impuesto","impuesto_loc")),~sum(as.numeric(.),na.rm = T)),
across(starts_with(c("descuento", "ret")),~-sum(as.numeric(.),na.rm = T))) %>%
rowwise() %>%
mutate(total = sum(c_across(starts_with(c("importe","impuesto","impuesto_loc", "descuento", "ret")))))
dat_towrite <- tt3%>%
ungroup() %>% tibble() %>%
arrange(desc(fecha)) %>%
distinct(id,.keep_all = T) %>%
arrange(fecha) %>%
filter(fecha > as.Date("01/10/2023",format="%d/%m/%Y")) %>%
rowid_to_column("num") %>%
mutate(across(starts_with(c("importe","impuesto","impuesto_loc", "descuento", "ret", "total")),
~ifelse(stri_detect(nombre_archivo, fixed = "ingresos"),-., .)))
dat_towrite <- dat_towrite %>% add_column_if_empty("impuesto_loc")
dat_towrite <- dat_towrite %>% add_column_if_empty("ret_iva")
dat_towrite <- dat_towrite %>% add_column_if_empty("ret_isr")
dat_towrite <- dat_towrite %>% add_column_if_empty("descuento")
dat_towrite <- dat_towrite %>%
mutate(num = num+ 1,
id2 = "X",CAT = "X",#fecha =  as_datetime(fecha),
nombre_archivo = stri_replace_all(nombre_archivo, fixed ="//", "/"),
nombre_archivo = stri_replace_first(nombre_archivo, fixed =stri_replace_first(carpeta, fixed ="~/", "/Users/lzoleon/"), ""),
Semestre = sprintf("CEILING.MATH(((MOD(YEAR(I%s),2023)*12+MONTH(I%s))-10)/6,1)",num,num),
mes = sprintf('CONCAT(YEAR(I%s)," ",MONTH(I%s))',num,num),
total = sprintf('SUM(L%s:Q%s)-Q%s-P%s',num,num,num,num),
deposito = sprintf('SUM(L%s:Q%s)',num,num),
CAT = case_when(
rfc %in% c("CCA13050946A" , "BII931004P61",
"TAPR801211ET9" ,"TPT890516JP5",
"TBO140305DH0" , "ILA101109LT1" ) ~ "1. CEGAM",
rfc =="UATC921227SFA" ~"2. Carolina Uscanga Tejeda",
rfc %in% c("MELV830330LL4" ,"RAEE9611079Q5")~ "4. CICESE (Asesoría tec)",
rfc =="RUBJ880825HT3" ~"4. Juan Cristóbal Rubio Badán",
rfc =="PERL760423341" ~"4. Lorena Pedrín (divulgacion)",
rfc =="GOLL601107RM5" ~"4. Lourdes González",
rfc =="UAE5702287S5" ~"4. UABC",
rfc =="SCA8111193G7" ~"5. CICESE (Combustible)",
rfc %in% c("DLO140827DS0","EARO760528CZ4","OPG230125DI6","CJV1206082B1",
"GOIH7402157I2","HIRE930126P54" ,"MABB6711202D1" ,"TTN08072242A",
"EILN791022CE6","TBA0806233M6","EIZV790827JF8","CME100225KI1",
"OTR8806018L6" ,"EAPM870722RB9","ZAGG500227FE8" ,"TOZP820629G41",
"SRS120620PJ3","CAGP910630J39","DCA150518QV3")~"5. CICESE (Viaticos)",
rfc =="IEN610217S28" ~"6. CEVIT",
rfc =="TCC230601967" ~"6. CLACLA (Construcción)",
rfc =="IAS160208CF1" ~"6. Oscar Jiménez (Construcción)",
rfc %in% c("FAV210203NC9","TTE2007072Q4","PER760130PV6")~"6. CICESE (Maquinaria y equipo)",
)
)
class(dat_towrite$Semestre) <- c(class(dat_towrite$Semestre), "formula")
class(dat_towrite$mes) <- c(class(dat_towrite$mes), "formula")
class(dat_towrite$total) <- c(class(dat_towrite$total), "formula")
class(dat_towrite$deposito) <- c(class(dat_towrite$deposito), "formula")
dat_towrite <- dat_towrite %>%
select(CFDI = id, rfc, Semestre, mes, id = id2, CAT, nombre, nombre_archivo, fecha,
receptor_rfc, receptor_nombre, importe,starts_with("impuesto"),starts_with("descuento"),
starts_with("ret_iva") , starts_with("ret_isr")  , total, deposito)
library(openxlsx)
wb <- createWorkbook()
addWorksheet(wb, "Facturas")
writeDataTable(wb, "Facturas", x = dat_towrite)
headerStyle <- createStyle(
fontSize = 14, fontColour = "#FFFFFF", halign = "center",
fgFill = "#4F81BD", border = "TopBottom", borderColour = "#4F81BD"
)
numStyle <- createStyle(numFmt = "ACCOUNTING")
addStyle(wb, sheet = 1, numStyle, rows = 2:(nrow(dat_towrite)+1), cols = 12:19, gridExpand = TRUE)
datStyle <- createStyle(numFmt = "DATE")
addStyle(wb, sheet = 1, datStyle, rows = 2:(nrow(dat_towrite)+1), cols = 9, gridExpand = TRUE)
if(reembolso){
saveWorkbook(wb, paste0(carpeta,"/calculo_reembolso.xlsx"), overwrite = TRUE)
} else {
saveWorkbook(wb, paste0(carpeta2,"/full_facturas_2023_2024.xlsx"), overwrite = TRUE)
}
carpeta <- "~/Library/CloudStorage/GoogleDrive-lorenzoln@gmail.com/My Drive/Work/CONTABILIDAD/AC/2024/pagos/08_agosto/reembolso Jorge/"
carpeta2 <- "~/Desktop/"
files <- list.files(carpeta,
full.names = T,pattern = ".xml",ignore.case = T, recursive = T)
library(xml2)
fixed <- tibble()
#files <- files[-20]
for (i in 1:length(files)) {
print("Doing for: " %+%i)
tt <- as_list(read_xml(files[i],options = "NOBLANKS"))
main <- tt$Comprobante$Emisor %>% attributes()
recp <- tt$Comprobante$Receptor %>% attributes()
id <- tt$Comprobante$Complemento$TimbreFiscalDigital %>% attributes()
id <- id$UUID
names(recp) <- "receptor_"%+%names(recp)
#tt$Comprobante[[2]] %>% attributes()
datetimbrdo <- tt$Comprobante$Complemento
for (k in 1:length(datetimbrdo)) {
if(!is.null(datetimbrdo[[k]] %>%
attr("FechaTimbrado") )) {
#print("breaking at: "%+%k)
break
}
}
datetimbrdo <- datetimbrdo[[k]] %>%
attr("FechaTimbrado") %>%
as_datetime(format= "%Y-%m-%dT%T")
#monts <- tt$Comprobante$Impuestos$Traslados
monts <- tt$Comprobante$Conceptos
fixed_conceptos <- tibble()
#name_file <- stri_extract_last_regex(files[i], "([[:alnum:]_ ,-]+).xml")
name_file <- files[i]
for (j in 1:length(monts)) {
#info_pago <- tt$Comprobante$Impuestos$Traslados[[j]] %>% attributes()
info_pago <- monts[[j]] %>% attributes()
#if(is.null)
concepto <- monts[[j]] %>%  attributes()
if(all(names(info_pago)%in%names(concepto))){
info_pago <- c()
} else if(sum(names(info_pago)%in%names(concepto))<length(names(info_pago))&
sum(names(info_pago)%in%names(concepto))>0){
info_pago <- info_pago[-which(names(info_pago)%in%names(concepto))]
}
if(monts[[j]]$Impuestos$Traslados$Traslado %>%
attributes() %>% length()>0){
pago_impuestos <- monts[[j]]$Impuestos$Traslados$Traslado %>%
attributes()%>%
as_tibble()
if("Importe"%in%names(pago_impuestos)){
pago_impuestos <-pago_impuestos%>%
rename(tipo_impuesto = Impuesto,Impuesto = Importe, Importe = Base)
} else {
pago_impuestos <-pago_impuestos%>%
rename(tipo_impuesto = Impuesto,#Impuesto = Importe,
Importe = Base)
}
if(all(names(pago_impuestos)%in%names(concepto))){
info_pago <- c()
} else if(sum(names(pago_impuestos)%in%names(concepto))<length(names(pago_impuestos))&
sum(names(pago_impuestos)%in%names(concepto))>0){
pago_impuestos <- pago_impuestos[-which(names(pago_impuestos)%in%names(concepto))]
}
} else {
pago_impuestos <- c()
}
if("Retenciones"%in%(monts[[j]]$Impuestos %>%names)){
retenciones <- tibble()
for (k in 1:length(monts[[j]]$Impuestos$Retenciones)) {
retencion <- monts[[j]]$Impuestos$Retenciones[[k]] %>%
attributes() %>%
as_tibble() %>%
mutate(tipo = case_when(
Impuesto =="002" ~ "retIVA",
Impuesto =="001" ~ "retISR",
)) %>%
select(Base, tipo, monto = Importe)
retenciones <- retenciones %>%
bind_rows(retencion)
}
retenciones <- retenciones%>%
mutate(across(-tipo,~as.numeric(.))) %>%
pivot_wider(names_from = tipo, values_from = monto) %>%
select(-Base)
all_concepto <- c(main,list(date = datetimbrdo),recp,concepto,info_pago,pago_impuestos,retenciones) %>%
as_tibble() %>% clean_names()
} else {
all_concepto <- c(main,list(date = datetimbrdo),recp, concepto,info_pago,pago_impuestos) %>%
as_tibble() %>% clean_names()
}
fixed_conceptos <- fixed_conceptos %>% bind_rows(all_concepto)
}
monts <- tt$Comprobante$Complemento$ImpuestosLocales
fixed_impuestos <- tibble()
if(!is.null(monts)){
if(length(monts)<=0){
impuestos <- monts %>%  attributes()
all_impuestos <- c(main, list(date = datetimbrdo),impuestos)%>%
as_tibble()  %>% clean_names()
fixed_impuestos <- fixed_impuestos %>% bind_rows(all_impuestos)
} else {
for (j in 1:length(monts)) {
impuestos <- monts[[j]] %>%  attributes()
all_impuestos <- c(main, list(date = datetimbrdo),impuestos)%>%
as_tibble()  %>% clean_names()
fixed_impuestos <- fixed_impuestos %>% bind_rows(all_impuestos)
}
}
if("importe"%in%names(fixed_impuestos)){
fixed_impuestos <- fixed_impuestos %>%
rename(impuesto_loc = importe)
}
fixed_impuestos <- fixed_impuestos %>%
#rename(impuesto_loc = importe) %>%
select(-ends_with("_2")) %>%
mutate(nombre_archivo = name_file,
id = id)
}
fixed_conceptos <- fixed_conceptos %>%
select(-ends_with("_2")) %>%
select(-ends_with("names")) %>%
mutate(nombre_archivo = name_file,
id = id) %>%
distinct()
if(nrow(fixed_impuestos) >0){
toadd <- fixed_conceptos%>% left_join(fixed_impuestos)
} else {
toadd <- fixed_conceptos
}
fixed <- fixed %>% bind_rows(toadd)
}
tt3 <- fixed %>%
group_by(id, rfc,	nombre,nombre_archivo,fecha=	date,#clave_unidad,unidad,#tipo_impuesto
receptor_rfc, receptor_nombre,
) %>%
summarise(across(starts_with(c("importe","impuesto","impuesto_loc")),~sum(as.numeric(.),na.rm = T)),
across(starts_with(c("descuento", "ret")),~-sum(as.numeric(.),na.rm = T))) %>%
rowwise() %>%
mutate(total = sum(c_across(starts_with(c("importe","impuesto","impuesto_loc", "descuento", "ret")))))
dat_towrite <- tt3%>%
ungroup() %>% tibble() %>%
arrange(desc(fecha)) %>%
distinct(id,.keep_all = T) %>%
arrange(fecha) %>%
filter(fecha > as.Date("01/10/2023",format="%d/%m/%Y")) %>%
rowid_to_column("num") %>%
mutate(across(starts_with(c("importe","impuesto","impuesto_loc", "descuento", "ret", "total")),
~ifelse(stri_detect(nombre_archivo, fixed = "ingresos"),-., .)))
dat_towrite <- dat_towrite %>% add_column_if_empty("impuesto_loc")
dat_towrite <- dat_towrite %>% add_column_if_empty("ret_iva")
dat_towrite <- dat_towrite %>% add_column_if_empty("ret_isr")
dat_towrite <- dat_towrite %>% add_column_if_empty("descuento")
dat_towrite <- dat_towrite %>%
mutate(num = num+ 1,
id2 = "X",CAT = "X",#fecha =  as_datetime(fecha),
nombre_archivo = stri_replace_all(nombre_archivo, fixed ="//", "/"),
nombre_archivo = stri_replace_first(nombre_archivo, fixed =stri_replace_first(carpeta, fixed ="~/", "/Users/lzoleon/"), ""),
Semestre = sprintf("CEILING.MATH(((MOD(YEAR(I%s),2023)*12+MONTH(I%s))-10)/6,1)",num,num),
mes = sprintf('CONCAT(YEAR(I%s)," ",MONTH(I%s))',num,num),
total = sprintf('SUM(L%s:Q%s)-Q%s-P%s',num,num,num,num),
deposito = sprintf('SUM(L%s:Q%s)',num,num),
CAT = case_when(
rfc %in% c("CCA13050946A" , "BII931004P61",
"TAPR801211ET9" ,"TPT890516JP5",
"TBO140305DH0" , "ILA101109LT1" ) ~ "1. CEGAM",
rfc =="UATC921227SFA" ~"2. Carolina Uscanga Tejeda",
rfc %in% c("MELV830330LL4" ,"RAEE9611079Q5")~ "4. CICESE (Asesoría tec)",
rfc =="RUBJ880825HT3" ~"4. Juan Cristóbal Rubio Badán",
rfc =="PERL760423341" ~"4. Lorena Pedrín (divulgacion)",
rfc =="GOLL601107RM5" ~"4. Lourdes González",
rfc =="UAE5702287S5" ~"4. UABC",
rfc =="SCA8111193G7" ~"5. CICESE (Combustible)",
rfc %in% c("DLO140827DS0","EARO760528CZ4","OPG230125DI6","CJV1206082B1",
"GOIH7402157I2","HIRE930126P54" ,"MABB6711202D1" ,"TTN08072242A",
"EILN791022CE6","TBA0806233M6","EIZV790827JF8","CME100225KI1",
"OTR8806018L6" ,"EAPM870722RB9","ZAGG500227FE8" ,"TOZP820629G41",
"SRS120620PJ3","CAGP910630J39","DCA150518QV3")~"5. CICESE (Viaticos)",
rfc =="IEN610217S28" ~"6. CEVIT",
rfc =="TCC230601967" ~"6. CLACLA (Construcción)",
rfc =="IAS160208CF1" ~"6. Oscar Jiménez (Construcción)",
rfc %in% c("FAV210203NC9","TTE2007072Q4","PER760130PV6")~"6. CICESE (Maquinaria y equipo)",
)
)
class(dat_towrite$Semestre) <- c(class(dat_towrite$Semestre), "formula")
class(dat_towrite$mes) <- c(class(dat_towrite$mes), "formula")
class(dat_towrite$total) <- c(class(dat_towrite$total), "formula")
class(dat_towrite$deposito) <- c(class(dat_towrite$deposito), "formula")
dat_towrite <- dat_towrite %>%
select(CFDI = id, rfc, Semestre, mes, id = id2, CAT, nombre, nombre_archivo, fecha,
receptor_rfc, receptor_nombre, importe,starts_with("impuesto"),starts_with("descuento"),
starts_with("ret_iva") , starts_with("ret_isr")  , total, deposito)
library(openxlsx)
wb <- createWorkbook()
addWorksheet(wb, "Facturas")
writeDataTable(wb, "Facturas", x = dat_towrite)
headerStyle <- createStyle(
fontSize = 14, fontColour = "#FFFFFF", halign = "center",
fgFill = "#4F81BD", border = "TopBottom", borderColour = "#4F81BD"
)
numStyle <- createStyle(numFmt = "ACCOUNTING")
addStyle(wb, sheet = 1, numStyle, rows = 2:(nrow(dat_towrite)+1), cols = 12:19, gridExpand = TRUE)
datStyle <- createStyle(numFmt = "DATE")
addStyle(wb, sheet = 1, datStyle, rows = 2:(nrow(dat_towrite)+1), cols = 9, gridExpand = TRUE)
if(reembolso){
saveWorkbook(wb, paste0(carpeta,"/calculo_reembolso.xlsx"), overwrite = TRUE)
} else {
saveWorkbook(wb, paste0(carpeta2,"/full_facturas_2023_2024.xlsx"), overwrite = TRUE)
}
install.packages("languageserver")
