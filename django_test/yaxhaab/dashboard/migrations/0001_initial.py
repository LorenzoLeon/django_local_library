# Generated by Django 4.2.15 on 2024-08-28 01:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(help_text='Enter an Event type here', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MapEventImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='MapEvents',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular map point across whole library', primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Enter an Event link here', max_length=200, unique=True)),
                ('description', models.TextField(blank=True, help_text='Enter an event description', null=True)),
                ('link', models.CharField(help_text='Enter an Event link here', max_length=200, unique=True)),
                ('date', models.DateTimeField(help_text="Enter the event's date and time")),
                ('location', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MapProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a Map Name here', max_length=200, unique=True)),
                ('type', models.CharField(choices=[('v', 'Vector Image'), ('a', 'Activity Areas'), ('p', 'Points of interest')], default='v', help_text='Map Type', max_length=1)),
                ('file', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='PointsInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular map point across whole library', primary_key=True, serialize=False)),
                ('size', models.IntegerField(default=1, help_text='Size for this Map Point', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='PointsOfInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(help_text='Enter a Point type here', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('name', models.CharField(help_text='Enter a Proyect Name here', max_length=200, unique=True)),
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular book across whole library', primary_key=True, serialize=False)),
                ('credits_issued', models.IntegerField(help_text='Enter number of credits issued')),
                ('credits_sold', models.IntegerField(help_text='Enter number of credits sold')),
                ('money_received', models.IntegerField(help_text='Enter number of credits issued')),
                ('hectares', models.IntegerField(help_text='Enter number of hectares in activity area')),
                ('population', models.IntegerField(help_text='Enter community population')),
                ('land_owners', models.IntegerField(help_text='Enter number of land_owners')),
                ('description', models.TextField(blank=True, help_text='Enter a proyect description', null=True)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a federal entity', max_length=200, unique=True)),
            ],
        ),
        migrations.AddConstraint(
            model_name='state',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='language_name_case_insensitive_unique', violation_error_message='Language already exists (case insensitive match)'),
        ),
        migrations.AddField(
            model_name='project',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dashboard.state'),
        ),
        migrations.AddConstraint(
            model_name='pointsofinterest',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('type'), name='points_of_interest_type_case_insensitive_unique', violation_error_message='Points type already exists (case insensitive match)'),
        ),
        migrations.AddField(
            model_name='pointsinstance',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dashboard.mapproject'),
        ),
        migrations.AddField(
            model_name='pointsinstance',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dashboard.project'),
        ),
        migrations.AddField(
            model_name='pointsinstance',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dashboard.pointsofinterest'),
        ),
        migrations.AddField(
            model_name='mapproject',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dashboard.project'),
        ),
        migrations.AddField(
            model_name='mapevents',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mapevents',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dashboard.mapproject'),
        ),
        migrations.AddField(
            model_name='mapevents',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dashboard.project'),
        ),
        migrations.AddField(
            model_name='mapevents',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dashboard.event'),
        ),
        migrations.AddField(
            model_name='mapeventimages',
            name='mapevent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dashboard.mapevents'),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('type'), name='event_type_case_insensitive_unique', violation_error_message='Event type already exists (case insensitive match)'),
        ),
        migrations.AddConstraint(
            model_name='project',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='proyect_name_case_insensitive_unique', violation_error_message='Proyect already exists (case insensitive match)'),
        ),
    ]
